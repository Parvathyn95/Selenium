<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-23R50OH" ignored="0" name="Test" tests="12" failures="0" timestamp="04 Dec 2022 11:45:15 GMT" time="3.958" errors="0">
  <testcase name="@BeforeMethod initBrowser" time="3.895" classname="com.obsqura.TestNGSample.BaseObs">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 106
Current browser version is 108.0.5359.94 with binary path C:\Program Files (x86)\Google\Chrome\Application\chrome.exe
Build info: version: &amp;apos;4.4.0&amp;apos;, revision: &amp;apos;e5c75ed026a&amp;apos;
System info: host: &amp;apos;DESKTOP-23R50OH&amp;apos;, ip: &amp;apos;192.168.0.169&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_201&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 106
Current browser version is 108.0.5359.94 with binary path C:\Program Files (x86)\Google\Chrome\Application\chrome.exe
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-23R50OH', ip: '192.168.0.169', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}}]
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:144)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:242)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
	at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:101)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:81)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
	at com.obsqura.TestNGSample.BaseObs.initBrowser(BaseObs.java:13)
... Removed 27 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod initBrowser -->
  <testcase name="@BeforeMethod initBrowser" time="0.0" classname="com.obsqura.TestNGSample.BaseObs">
    <skipped/>
  </testcase> <!-- @BeforeMethod initBrowser -->
  <testcase name="@BeforeMethod initBrowser" time="0.0" classname="com.obsqura.TestNGSample.BaseObs">
    <skipped/>
  </testcase> <!-- @BeforeMethod initBrowser -->
  <testcase name="@BeforeMethod initBrowser" time="0.0" classname="com.obsqura.TestNGSample.BaseObs">
    <skipped/>
  </testcase> <!-- @BeforeMethod initBrowser -->
  <testcase name="@BeforeMethod initBrowser" time="0.0" classname="com.obsqura.TestNGSample.BaseObs">
    <skipped/>
  </testcase> <!-- @BeforeMethod initBrowser -->
  <testcase name="@BeforeMethod initBrowser" time="0.0" classname="com.obsqura.TestNGSample.BaseObs">
    <skipped/>
  </testcase> <!-- @BeforeMethod initBrowser -->
  <testcase name="@BeforeMethod initBrowser" time="0.0" classname="com.obsqura.TestNGSample.BaseObs">
    <skipped/>
  </testcase> <!-- @BeforeMethod initBrowser -->
  <testcase name="@BeforeMethod initBrowser" time="0.0" classname="com.obsqura.TestNGSample.BaseObs">
    <skipped/>
  </testcase> <!-- @BeforeMethod initBrowser -->
  <testcase name="@BeforeMethod initBrowser" time="0.0" classname="com.obsqura.TestNGSample.BaseObs">
    <skipped/>
  </testcase> <!-- @BeforeMethod initBrowser -->
  <testcase name="@BeforeMethod initBrowser" time="0.0" classname="com.obsqura.TestNGSample.BaseObs">
    <skipped/>
  </testcase> <!-- @BeforeMethod initBrowser -->
  <testcase name="@BeforeMethod initBrowser" time="0.0" classname="com.obsqura.TestNGSample.BaseObs">
    <skipped/>
  </testcase> <!-- @BeforeMethod initBrowser -->
  <testcase name="@BeforeMethod initBrowser" time="0.0" classname="com.obsqura.TestNGSample.BaseObs">
    <skipped/>
  </testcase> <!-- @BeforeMethod initBrowser -->
  <testcase name="locatingByAncestor" time="0.0" classname="com.obsqura.TestNGSample.LocateByContaindOrAnd">
    <skipped/>
  </testcase> <!-- locatingByAncestor -->
  <testcase name="locatingByAnd" time="0.0" classname="com.obsqura.TestNGSample.LocateByContaindOrAnd">
    <skipped/>
  </testcase> <!-- locatingByAnd -->
  <testcase name="locatingByChild" time="0.0" classname="com.obsqura.TestNGSample.LocateByContaindOrAnd">
    <skipped/>
  </testcase> <!-- locatingByChild -->
  <testcase name="locatingByContains" time="0.0" classname="com.obsqura.TestNGSample.LocateByContaindOrAnd">
    <skipped/>
  </testcase> <!-- locatingByContains -->
  <testcase name="locatingByFollowing" time="0.0" classname="com.obsqura.TestNGSample.LocateByContaindOrAnd">
    <skipped/>
  </testcase> <!-- locatingByFollowing -->
  <testcase name="locatingByOr" time="0.0" classname="com.obsqura.TestNGSample.LocateByContaindOrAnd">
    <skipped/>
  </testcase> <!-- locatingByOr -->
  <testcase name="locatingByParent" time="0.0" classname="com.obsqura.TestNGSample.LocateByContaindOrAnd">
    <skipped/>
  </testcase> <!-- locatingByParent -->
  <testcase name="locatingByPreceding" time="0.0" classname="com.obsqura.TestNGSample.LocateByContaindOrAnd">
    <skipped/>
  </testcase> <!-- locatingByPreceding -->
  <testcase name="locatingBySelf" time="0.0" classname="com.obsqura.TestNGSample.LocateByContaindOrAnd">
    <skipped/>
  </testcase> <!-- locatingBySelf -->
  <testcase name="locatingBySibling" time="0.0" classname="com.obsqura.TestNGSample.LocateByContaindOrAnd">
    <skipped/>
  </testcase> <!-- locatingBySibling -->
  <testcase name="locatingByStartsWith" time="0.0" classname="com.obsqura.TestNGSample.LocateByContaindOrAnd">
    <skipped/>
  </testcase> <!-- locatingByStartsWith -->
  <testcase name="locatingByTextOf" time="0.0" classname="com.obsqura.TestNGSample.LocateByContaindOrAnd">
    <skipped/>
  </testcase> <!-- locatingByTextOf -->
</testsuite> <!-- Test -->
